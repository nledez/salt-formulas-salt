# -*- coding: utf-8 -*-
# vim: ft=jinja

{%- macro deep_merge(a, b) %}
{#-     This whole `'dict' in x.__class__.__name__` mess is a
        workaround for the missing mapping test in CentOS 6's
        ancient Jinja2, see #193  #}
{%-     for k,v in b.items() %}
{%-         if v is string or v is number %}
{%-             do a.update({ k: v }) %}
{%-         elif 'dict' not in v.__class__.__name__ %}
{%-             if a[k] is not defined %}
{%-                 do a.update({ k: v }) %}
{%-             elif a[k] is iterable and 'dict' not in a[k].__class__.__name__ and
                a[k] is not string %}
{%-                 do a.update({ k: v|list + a[k]|list}) %}
{%-             else %}
{%-                 do a.update({ k: v }) %}
{%-             endif %}
{%-         elif 'dict' in v.__class__.__name__ %}
{%-             if a[k] is not defined %}
{%-                 do a.update({ k: v }) %}
{%-             elif 'dict' in a[k].__class__.__name__ %}
{%-                 do a.update({ k: v }) %}
{%-             else %}
{%-                 do deep_merge(a[k], v) %}
{%-             endif %}
{%-         else %}
{%-            do a.update({ k: 'ERROR: case not contempled in merging!' }) %}
{%-         endif %}
{%-     endfor %}
{%- endmacro %}


{## Start with  defaults from defaults.yaml ##}
{% import_yaml "salt/defaults.yaml" as default_settings %}

{##
Setup variable using grains['os_family'] based logic, only add key:values here
that differ from whats in defaults.yaml
##}
{% set osrelease = salt['grains.get']('osrelease') %}
{% set salt_release = salt['pillar.get']('salt:release', 'latest') %}
{% set os_family_map = salt['grains.filter_by']({
    'Debian':  {
      'pkgrepo': 'deb http://repo.saltstack.com/apt/' +
      salt['grains.get']('os')|lower + '/' + salt['grains.get']('osmajorrelease', osrelease)|string + '/amd64/' + salt_release + ' ' + salt['grains.get']('oscodename') + ' main',
      'key_url': 'https://repo.saltstack.com/apt/' + salt['grains.get']('os')|lower + '/' + salt['grains.get']('osmajorrelease', osrelease)|string + '/amd64/' + salt_release  + '/SALTSTACK-GPG-KEY.pub',
      'libgit2': 'libgit2-22',
      'pyinotify': 'python-pyinotify',
      'gitfs': {
        'pygit2': {
          'install_from_source': True,
          'version': '0.22.1',
          'git': {
            'require_state': False,
            'install_from_package': 'git',
          },
          'libgit2': {
            'install_from_source': False,
          },
        },
      },
    },
  }, merge=salt['grains.filter_by']({
    'Ubuntu':  {
      'pkgrepo': 'deb http://repo.saltstack.com/apt/' +
      salt['grains.get']('os')|lower + '/' + osrelease + '/amd64/' + salt_release  + ' ' + salt['grains.get']('oscodename') + ' main',
      'key_url': 'https://repo.saltstack.com/apt/' + salt['grains.get']('os')|lower + '/' + osrelease + '/amd64/' + salt_release + '/SALTSTACK-GPG-KEY.pub',
      'pygit2': 'python-pygit2',
      'gitfs': {
        'pygit2': {
          'install_from_source': False,
          'git': {
            'require_state': False,
            'install_from_package': None,
          },
        },
      },
    },
  },
  grain='os', merge=salt['pillar.get']('salt:lookup')))
%}

{## Merge the flavor_map to the default settings ##}
{% do deep_merge(default_settings.salt,os_family_map) %}

{## Merge in salt:lookup pillar ##}
{% set salt_settings = salt['pillar.get'](
    'salt',
    default=default_settings.salt,
    merge=True)
%}
